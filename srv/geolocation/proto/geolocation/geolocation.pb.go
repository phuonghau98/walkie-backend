// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/geolocation/geolocation.proto

package geolocation

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_c96037f606e6fd70, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Location struct {
	Longitude            float64  `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float64  `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	UserID               string   `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	UpdatedAt            int64    `protobuf:"varint,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	SharedIDs            []string `protobuf:"bytes,5,rep,name=sharedIDs,proto3" json:"sharedIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_c96037f606e6fd70, []int{1}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Location) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *Location) GetSharedIDs() []string {
	if m != nil {
		return m.SharedIDs
	}
	return nil
}

type LocationResponse struct {
	Locations            []*Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LocationResponse) Reset()         { *m = LocationResponse{} }
func (m *LocationResponse) String() string { return proto.CompactTextString(m) }
func (*LocationResponse) ProtoMessage()    {}
func (*LocationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c96037f606e6fd70, []int{2}
}

func (m *LocationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocationResponse.Unmarshal(m, b)
}
func (m *LocationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocationResponse.Marshal(b, m, deterministic)
}
func (m *LocationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationResponse.Merge(m, src)
}
func (m *LocationResponse) XXX_Size() int {
	return xxx_messageInfo_LocationResponse.Size(m)
}
func (m *LocationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LocationResponse proto.InternalMessageInfo

func (m *LocationResponse) GetLocations() []*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

type LocationRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	IsRemove             int32    `protobuf:"varint,2,opt,name=isRemove,proto3" json:"isRemove,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocationRequest) Reset()         { *m = LocationRequest{} }
func (m *LocationRequest) String() string { return proto.CompactTextString(m) }
func (*LocationRequest) ProtoMessage()    {}
func (*LocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c96037f606e6fd70, []int{3}
}

func (m *LocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocationRequest.Unmarshal(m, b)
}
func (m *LocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocationRequest.Marshal(b, m, deterministic)
}
func (m *LocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationRequest.Merge(m, src)
}
func (m *LocationRequest) XXX_Size() int {
	return xxx_messageInfo_LocationRequest.Size(m)
}
func (m *LocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LocationRequest proto.InternalMessageInfo

func (m *LocationRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *LocationRequest) GetIsRemove() int32 {
	if m != nil {
		return m.IsRemove
	}
	return 0
}

type LocationInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocationInfo) Reset()         { *m = LocationInfo{} }
func (m *LocationInfo) String() string { return proto.CompactTextString(m) }
func (*LocationInfo) ProtoMessage()    {}
func (*LocationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c96037f606e6fd70, []int{4}
}

func (m *LocationInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocationInfo.Unmarshal(m, b)
}
func (m *LocationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocationInfo.Marshal(b, m, deterministic)
}
func (m *LocationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationInfo.Merge(m, src)
}
func (m *LocationInfo) XXX_Size() int {
	return xxx_messageInfo_LocationInfo.Size(m)
}
func (m *LocationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LocationInfo proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Empty)(nil), "geolocation.Empty")
	proto.RegisterType((*Location)(nil), "geolocation.Location")
	proto.RegisterType((*LocationResponse)(nil), "geolocation.LocationResponse")
	proto.RegisterType((*LocationRequest)(nil), "geolocation.LocationRequest")
	proto.RegisterType((*LocationInfo)(nil), "geolocation.LocationInfo")
}

func init() {
	proto.RegisterFile("proto/geolocation/geolocation.proto", fileDescriptor_c96037f606e6fd70)
}

var fileDescriptor_c96037f606e6fd70 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x4d, 0x4f, 0x83, 0x40,
	0x10, 0xed, 0x8a, 0xad, 0x30, 0x68, 0x35, 0x9b, 0x68, 0x08, 0xd1, 0x84, 0xac, 0x17, 0x4e, 0x35,
	0x69, 0xcf, 0x1e, 0xd4, 0x36, 0x84, 0xc4, 0xd3, 0x36, 0xfe, 0x00, 0x2c, 0x63, 0x25, 0xa1, 0x2c,
	0xb2, 0x4b, 0x13, 0xff, 0x89, 0x3f, 0xce, 0x1f, 0x63, 0xf8, 0x28, 0x4b, 0x13, 0xbc, 0x31, 0xef,
	0xcd, 0x0c, 0xef, 0xbd, 0x59, 0xb8, 0xcf, 0x0b, 0xa1, 0xc4, 0xc3, 0x16, 0x45, 0x2a, 0x36, 0x91,
	0x4a, 0x44, 0xd6, 0xff, 0x9e, 0xd5, 0x2c, 0xb5, 0x7b, 0x10, 0x3b, 0x83, 0xf1, 0x6a, 0x97, 0xab,
	0x6f, 0xf6, 0x43, 0xc0, 0x7c, 0x6d, 0x51, 0x7a, 0x0b, 0x56, 0x2a, 0xb2, 0x6d, 0xa2, 0xca, 0x18,
	0x1d, 0xe2, 0x11, 0x9f, 0x70, 0x0d, 0x50, 0x17, 0xcc, 0x34, 0x52, 0x0d, 0x79, 0x52, 0x93, 0x5d,
	0x4d, 0x6f, 0x60, 0x52, 0x4a, 0x2c, 0xc2, 0xa5, 0x63, 0x78, 0xc4, 0xb7, 0x78, 0x5b, 0x55, 0x1b,
	0xcb, 0x3c, 0x8e, 0x14, 0xc6, 0x4f, 0xca, 0x39, 0xf5, 0x88, 0x6f, 0x70, 0x0d, 0x54, 0xac, 0xfc,
	0x8c, 0x0a, 0x8c, 0xc3, 0xa5, 0x74, 0xc6, 0x9e, 0xe1, 0x5b, 0x5c, 0x03, 0x2c, 0x80, 0xab, 0x83,
	0x32, 0x8e, 0x32, 0x17, 0x99, 0x44, 0xba, 0xa8, 0x14, 0x36, 0x98, 0x74, 0x88, 0x67, 0xf8, 0xf6,
	0xfc, 0x7a, 0xd6, 0xf7, 0xda, 0x4d, 0xe8, 0x3e, 0xb6, 0x82, 0x4b, 0xbd, 0xe8, 0xab, 0x44, 0xa9,
	0x7a, 0x7a, 0xc9, 0x91, 0x5e, 0x17, 0xcc, 0x44, 0x72, 0xdc, 0x89, 0x7d, 0xe3, 0x71, 0xcc, 0xbb,
	0x9a, 0x4d, 0xe1, 0xfc, 0xb0, 0x26, 0xcc, 0x3e, 0xc4, 0xfc, 0x97, 0x00, 0x0d, 0xf4, 0xaf, 0xd7,
	0x58, 0xec, 0x93, 0x0d, 0xd2, 0x47, 0x98, 0xbe, 0xd5, 0x0e, 0xbb, 0x58, 0x87, 0x15, 0xba, 0xf4,
	0x08, 0x6e, 0xce, 0x31, 0xa2, 0xcf, 0x60, 0x07, 0xa8, 0xba, 0xd9, 0x81, 0x26, 0xf7, 0x6e, 0xd8,
	0x71, 0x9b, 0x11, 0x1b, 0xd1, 0x17, 0xb8, 0x58, 0x57, 0x31, 0xea, 0xc3, 0xfe, 0x33, 0x51, 0x87,
	0x31, 0x2c, 0xe4, 0x7d, 0x52, 0x3f, 0x9b, 0xc5, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x1f,
	0x95, 0x08, 0x5d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GeolocationServiceClient is the client API for GeolocationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeolocationServiceClient interface {
	UpdateLocation(ctx context.Context, in *Location, opts ...grpc.CallOption) (*Empty, error)
	GetLocation(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*LocationResponse, error)
	ShareLocation(ctx context.Context, in *LocationRequest, opts ...grpc.CallOption) (*Empty, error)
}

type geolocationServiceClient struct {
	cc *grpc.ClientConn
}

func NewGeolocationServiceClient(cc *grpc.ClientConn) GeolocationServiceClient {
	return &geolocationServiceClient{cc}
}

func (c *geolocationServiceClient) UpdateLocation(ctx context.Context, in *Location, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/geolocation.GeolocationService/UpdateLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geolocationServiceClient) GetLocation(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*LocationResponse, error) {
	out := new(LocationResponse)
	err := c.cc.Invoke(ctx, "/geolocation.GeolocationService/GetLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geolocationServiceClient) ShareLocation(ctx context.Context, in *LocationRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/geolocation.GeolocationService/ShareLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GeolocationServiceServer is the server API for GeolocationService service.
type GeolocationServiceServer interface {
	UpdateLocation(context.Context, *Location) (*Empty, error)
	GetLocation(context.Context, *Empty) (*LocationResponse, error)
	ShareLocation(context.Context, *LocationRequest) (*Empty, error)
}

// UnimplementedGeolocationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGeolocationServiceServer struct {
}

func (*UnimplementedGeolocationServiceServer) UpdateLocation(ctx context.Context, req *Location) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLocation not implemented")
}
func (*UnimplementedGeolocationServiceServer) GetLocation(ctx context.Context, req *Empty) (*LocationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLocation not implemented")
}
func (*UnimplementedGeolocationServiceServer) ShareLocation(ctx context.Context, req *LocationRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShareLocation not implemented")
}

func RegisterGeolocationServiceServer(s *grpc.Server, srv GeolocationServiceServer) {
	s.RegisterService(&_GeolocationService_serviceDesc, srv)
}

func _GeolocationService_UpdateLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Location)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeolocationServiceServer).UpdateLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/geolocation.GeolocationService/UpdateLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeolocationServiceServer).UpdateLocation(ctx, req.(*Location))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeolocationService_GetLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeolocationServiceServer).GetLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/geolocation.GeolocationService/GetLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeolocationServiceServer).GetLocation(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeolocationService_ShareLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeolocationServiceServer).ShareLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/geolocation.GeolocationService/ShareLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeolocationServiceServer).ShareLocation(ctx, req.(*LocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeolocationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "geolocation.GeolocationService",
	HandlerType: (*GeolocationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateLocation",
			Handler:    _GeolocationService_UpdateLocation_Handler,
		},
		{
			MethodName: "GetLocation",
			Handler:    _GeolocationService_GetLocation_Handler,
		},
		{
			MethodName: "ShareLocation",
			Handler:    _GeolocationService_ShareLocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/geolocation/geolocation.proto",
}
